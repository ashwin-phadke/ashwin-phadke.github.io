[{"authors":["admin"],"categories":null,"content":"Ashwin worked as a AI and Deep Learning Engineer helping apply computer vision applications for better mobility ,improved healthcare and industrial QA. With around 2 years of total experience his research interests include deep learning, artificial neural netwoks, computer vision and natural language processing.\nHe has been a speaker at leading tech conferences and meetups. He also serves as a mentor for incubated startups in the field of deep learning, computer vision by being a part of various mentoring sessions in colleges, seminars and working with startup founders by organizing workshops to upskill their workforce.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/author/ashwin-phadke/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/ashwin-phadke/","section":"authors","summary":"Ashwin worked as a AI and Deep Learning Engineer helping apply computer vision applications for better mobility ,improved healthcare and industrial QA. With around 2 years of total experience his research interests include deep learning, artificial neural netwoks, computer vision and natural language processing.","tags":null,"title":"Ashwin Phadke","type":"authors"},{"authors":["Ashwin Phadke"],"categories":null,"content":"","date":1592397000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1592397000,"objectID":"b5bcf8bfce1cd9ddf0147be6258f68f5","permalink":"/talk/intro-to-deep-learning/","publishdate":"2020-06-10T21:56:29+05:30","relpermalink":"/talk/intro-to-deep-learning/","section":"talk","summary":"A brief introduction to deep learning-computer vision and using tensorflow to building models.","tags":[],"title":"[Invited]Introduction to Deep Learning using Tensorflow","type":"talk"},{"authors":[],"categories":[],"content":"","date":1592152335,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1592152335,"objectID":"b2db37ffb7405a22c5305d48542d2431","permalink":"/project/cvplayground/","publishdate":"2020-06-14T22:02:15+05:30","relpermalink":"/project/cvplayground/","section":"project","summary":"","tags":["Deep Learning"],"title":"Object Detection app using TensorFlow and Flask","type":"project"},{"authors":[],"categories":[],"content":"","date":1591805592,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591805592,"objectID":"62c3aea1ae23e4553e1ea6f216a92e9f","permalink":"/project/object-detection/","publishdate":"2020-06-10T21:43:12+05:30","relpermalink":"/project/object-detection/","section":"project","summary":"","tags":["Deep Learning"],"title":"Object Detection","type":"project"},{"authors":[],"categories":[],"content":"","date":1591805295,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591805295,"objectID":"a1cc83c0cd852ce8cac0a513ab54fe00","permalink":"/project/smart-anti-breach/","publishdate":"2020-06-10T21:38:15+05:30","relpermalink":"/project/smart-anti-breach/","section":"project","summary":"","tags":["Android"],"title":"Smart Anti Breach","type":"project"},{"authors":[],"categories":[],"content":"","date":1591805211,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591805211,"objectID":"7793f9f91bfb4935fdf511e7534eb33a","permalink":"/project/zappchat/","publishdate":"2020-06-10T21:36:51+05:30","relpermalink":"/project/zappchat/","section":"project","summary":"","tags":["Android"],"title":"Android chat application : Zappchat (from Rivchat)","type":"project"},{"authors":[],"categories":[],"content":"","date":1591802103,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591802103,"objectID":"dd81e60e07e512e61051f226e3533751","permalink":"/project/face-recognition/","publishdate":"2020-06-10T20:45:03+05:30","relpermalink":"/project/face-recognition/","section":"project","summary":"","tags":["Deep Learning"],"title":"Face Recognition using Python and OpenCV Haarcascades","type":"project"},{"authors":[],"categories":[],"content":"","date":1591721781,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591721781,"objectID":"b2f67c141c5ebe247c3d9f43910c765a","permalink":"/project/optical-flow/","publishdate":"2020-06-09T22:26:21+05:30","relpermalink":"/project/optical-flow/","section":"project","summary":"","tags":["Deep Learning"],"title":"Optical Flow using OpenCV and Python","type":"project"},{"authors":[],"categories":[],"content":"","date":1591721509,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591721509,"objectID":"b7dc37925842e7a6407794963b5163a9","permalink":"/project/canny-edge-detection/","publishdate":"2020-06-09T22:21:49+05:30","relpermalink":"/project/canny-edge-detection/","section":"project","summary":"","tags":["Deep Learning"],"title":"Canny Edge Detection using OpenCV and C++","type":"project"},{"authors":[],"categories":[],"content":"","date":1591721251,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591721251,"objectID":"a2485e742e184638ed19f88e6110c508","permalink":"/project/find-dominant-color/","publishdate":"2020-06-09T22:17:31+05:30","relpermalink":"/project/find-dominant-color/","section":"project","summary":"","tags":["Deep Learning"],"title":"Find Dominant Color from an image using OpenCV and C++","type":"project"},{"authors":["Ashwin Phadke"],"categories":[],"content":"Why the sudden need? I have mostly used the OpenCV library as available from pip or by installing wheel until I required some more essential features that are not available from those pre built binaries. However the installation looking fairly simple can have a lot of issues if not done correctly and hence the reason for being so mnay questions on forums out there on the internet pertaining to the installation issues:\nLet\u0026rsquo;s begin :\nAlthough it is always a best practice to create a virtual environment so as to keep your project dependencies sorted but skipping the step here. If you want to create one or know more about those you can visit this link for more information .\n Clone git clone https://github.com/opencv/opencv.git the official OpenCV repository from Github to have the latest updated version for use.  This will create a folder named opencv in your home directory.\n Some dependencies need to be taken care of before building OpenCV for use. These dependencies are IMPORTANT to facilitate the proper installation of opencv on the system and avoiding errors like no module found and etc even after having a successful install.  The must have dependenices :\n * `dnf install cmake` * `dnf install python-devel numpy` * `dnf install gcc gcc-c++` * `dnf install make`    GTK support :\n * `dnf install gtk2-devel` * `dnf install libdc1394-devel` * `dnf install libv4l-devel` * `dnf install ffmpeg-devel` * `dnf install gstreamer-plugins-base-devel`    For parallelizing functions in opencv on Intel machines you can install Threaded building blocks yum install tbb-devel . If you install this pass -D WITH_TBB=ON while building OpenCV with CMake.\n  Similarly for optimized mathematical operations install dnf install eigen3-devel and pass -D WITH_EIGEN=ON as earlier.\n  Create a folder named build wherein you\u0026rsquo;ll configure and build the library to later install by doing mkdir build cd build\n  Installing OpenCV - OpenCV is typically installed using CMake as(explanation from the documentation) - Installation has to be configured with CMake. It specifies which modules are to be installed, installation path, which additional libraries to be used, whether documentation and examples to be compiled etc. Below command is normally used for configuration (executed from build folder).\n  To configure build parameters using CMake you will pass the following command for minimal installation in release mode cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local ..\n  If you have installed the threading building blocks then you pass cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local .. -D WITH_TBB=ON\n  If you have installed the eigen library then do cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local .. -D WITH_EIGEN=ON .\n  If installed both then cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local .. -D WITH_EIGEN=ON -D WITH_TBB=ON\n  Finally execute make install to successfully build and install the OpenCV library on your Fedora machine.\n   ","date":1591715746,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591715746,"objectID":"e49039830dc2d0190f45c538eb4f39a2","permalink":"/post/install-opencv/","publishdate":"2020-06-09T20:45:46+05:30","relpermalink":"/post/install-opencv/","section":"post","summary":"Why the sudden need? I have mostly used the OpenCV library as available from pip or by installing wheel until I required some more essential features that are not available from those pre built binaries.","tags":[],"title":"Installing OpenCV from source on Fedora 31","type":"post"},{"authors":[],"categories":null,"content":"","date":1591637958,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591637958,"objectID":"41f96000cb4b9108c4a37dc62f2dd258","permalink":"/talk/pdctalk/","publishdate":"2020-06-08T23:09:18+05:30","relpermalink":"/talk/pdctalk/","section":"talk","summary":"","tags":[],"title":"Invited to talk about Understanding evaluation metrics","type":"talk"},{"authors":[],"categories":[],"content":"Machine learning basic concepts explained as notes from various courses, books and blogs to my understanding.\nConfusion Matrix Confusion matrix as a evaluation metric has been discussed a lot. Indeed, the reason being it\u0026rsquo;s wide usability and f1-score being a important metric in order to evaluate those classification models. Here we take a look at understanding the confusion matrix in a rather simple way.\nLet us assume a dataset with around 40 rows of customer chrun according to a survey from a leading company. The confusion matrix herein will include the matrix of corrected and wrong predictions done on actual labels i.e the outcomes of the preditions on actual labels.\nThe matrix is represented as :\nrows : Contain actual or true labels in the test set i.e here the labels given by the survey. columns : Contain predicted labels by the classifier trained on the customer survey dataset.  It is imperative to understand this relation so as to identify how accurate was the prediction done from the classifier.\nWe are going to see a binary classifcation example.\nWe know that such evalutaion metrics shows the models ability to correctly predict or seperate the classes. We will be also discussing f1-score here which is also important to learn along with confusion matrix.\nThe confusion matrix helps you measure some of very important metrics to assess performance of your model like .\n- Precision. - Recall. - Accuracy and plot ROC-AUC curve too.  Let us first dive into ddefining certain terminologies to better understand the concept of confusion matrix.\n- True Positive : Model predicted true and it is correct as per labels. - False Positive : Model predicted true but it is actually false. - True Negative : Model predicted false and it is false. - False Negative : Model predicted false but it is True.  The image clearly illustrates how these values are divided in the matrix.\nWe will take a look at how to calculate the values for the metrics derived from this matrix(lol, rhyme)\nPrecision is a measure of accuracy provided that a class label has been predicted.\nPrecision = True Positive __________________________ True Positve + False Positive  Recall = True Positive ______________________________ True Positve + False Negative   f1-score = 2 X Precision + Recall ______________________ Precision X Recall  Thus, average accuracy can be calculated using average of all f1-scores and the desired values is 1. F1-score can also be used for multi class classifiers.\nIf you want to learn more you can always refer to Wikipedia for more.\n ","date":1589988031,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1589988031,"objectID":"ad0d2e49cdc624132c410390445a8d56","permalink":"/post/ml-dl-confusion-matrix/","publishdate":"2020-05-20T20:50:31+05:30","relpermalink":"/post/ml-dl-confusion-matrix/","section":"post","summary":"Machine learning basic concepts explained as notes from various courses, books and blogs to my understanding.\nConfusion Matrix Confusion matrix as a evaluation metric has been discussed a lot. Indeed, the reason being it\u0026rsquo;s wide usability and f1-score being a important metric in order to evaluate those classification models.","tags":[],"title":"Understanding Confusion matrix for machine learning in a simple way","type":"post"},{"authors":["Ashwin Phadke"],"categories":[],"content":"Here is a guide to getting started with SQL Server and Azure Data Studio on Linux.\nWhen I was starting on in my career , databases always meant the MySQL and PHP way to implement anything. However even though MySQL is really a gem SQL Server and it\u0026rsquo;s functionality gives you the full enterprise like experience and ease to implement into your code and especially the activity manager aka activity monitor which I fell for immediately.\nStarting with SQL server and that too Linux is not very easy a task. Mostly the primary reason being that all the config files and supporting installation scripts are python 2.x compatible which is strange considering how long ago python 3.x was launched. I did not have python 2.x and did not want two python versions on my PC so I took up the task to convert most of the available installation scripts to support python 3.x and which is yet in progress giving the sheer amount of things needed to change. Meanwhile the development couldn\u0026rsquo;t have waited and hence I am writing a guide to facilitate ease in installing SQL Server on Linux. The documentation is pretty good in describing things but also is a lot of different pages to visit for a simple task. Hence adding it all under one page here.\nMy Machine configuration is as follows(for reference) :\n Intel I3-6006U 4GB / 1TB Dual boot  Fedora 31 Windows 10   Python 2.7 and 3.5 with pip package manager.  To successfully install SQL server and start using it follow the following steps carefully:\n  Update your system : Run sudo dnf update followed with sudo dnf upgrade to have the most recent updates to your Fedora machine. If you are using Debian/Ubuntu you can simply do sudo apt-get update and sudo apt-get upgrade respectively.\n  Download SQL configuration file from Red Hat repository :\n  sudo curl -o /etc/yum.repos.d/mssql-server.repo https://packages.microsoft.com/config/rhel/8/mssql-server-2019.repo\nTo Install the SQL server run :  sudo yum install -y mssql-server\nThis will install all the primary requirements for SQL server.\nNow to configure your SQL server installation you need to run the following command in order to complete the installation. The configuration step includes various options to add/remove add-ons to your SQL server installation and also to choose your edition.  sudo /opt/mssql/bin/mssql-conf setup\n This will fully install SQL server on your machine. Installation doesn\u0026rsquo;t take much time as most of the stuff is already done in Step 4 and step 5 includes configurations and settings that are needed to be installed in order to run the server.\n  Run systemctl status mssql-server to check whether the service is running or not. You can also use the standard start and stop for systemctl to change the service state.\n  So far we have installed SQL server but we also need to be able to access it, you can use pyodbc for all your python needs , also UnixODBC to connect via python program and/or command line. For that you will need some command line tools which you can learn to install here following steps by clicking here . The reason for not including here is :\n It is already included on the link like the above steps too. The focus here is SQL Server + Azure Data Studio   To install Azure Data studio in a very simple way click here for version 1.15.1\n  After the successful installation it will show up in your app directory.\n  Simply start using command azuredatastudio in terminal or by clicking Azure data studio in apps and connect with the username and password that you had configured in step 4. Default username is SA\n  You have now successfully managed to install SQL Server using Azure Data Studio on Linux(Fedora).\n ","date":1583248375,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1583248375,"objectID":"2550a6b6b1e3ef22f904f2d225585395","permalink":"/post/my-article-name/","publishdate":"2020-03-03T20:42:55+05:30","relpermalink":"/post/my-article-name/","section":"post","summary":"Here is a guide to getting started with SQL Server and Azure Data Studio on Linux.\nWhen I was starting on in my career , databases always meant the MySQL and PHP way to implement anything.","tags":[],"title":"Getting started with SQL server on Linux (using Azure data studio)","type":"post"},{"authors":[],"categories":[],"content":"Compiling and executing C++ programs   Browse to the directory of your cpp program and open a terminal in that folder.\n  Create a CMake file name CMakeLists.txt in the same directory as your project :\n   cmake_minimum_required(VERSION 2.8) project( ProjectName ) find_package( OpenCV REQUIRED )` add_executable( ProjectName your_program_main_file.cpp ) target_link_libraries( ProjectName ${OpenCV_LIBS} )   Now we can generate the executable so as to run the program. To do so execute   cmake . followed by\n make  on the terminal. The execution will run successfully and create binaries if there are no errors.\n To execute your compiled program enter ./ProjectName   ","date":1578583102,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1578583102,"objectID":"10c48c3f4e0675125a843a0b7cbd0adc","permalink":"/post/compile-cpp-program-opencv/","publishdate":"2020-01-09T20:48:22+05:30","relpermalink":"/post/compile-cpp-program-opencv/","section":"post","summary":"Compiling and executing C++ programs   Browse to the directory of your cpp program and open a terminal in that folder.\n  Create a CMake file name CMakeLists.txt in the same directory as your project :","tags":[],"title":"Compiling and executing OpenCV programs written in C++","type":"post"}]